<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.5">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="YMS Dashboard Service Test Plan" enabled="true">
      <stringProp name="TestPlan.comments">Multi-tenant stress testing framework for YMS Dashboard Service APIs</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments">
        <collectionProp name="Arguments.arguments">
          <elementProp name="BASE_URL" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL</stringProp>
            <stringProp name="Argument.value">${__P(base.url,http://localhost:5003)}</stringProp>
          </elementProp>
          <elementProp name="TEST_DURATION" elementType="Argument">
            <stringProp name="Argument.name">TEST_DURATION</stringProp>
            <stringProp name="Argument.value">${__P(test.duration,3600)}</stringProp>
          </elementProp>
          <elementProp name="RPM_MULTIPLIER" elementType="Argument">
            <stringProp name="Argument.name">RPM_MULTIPLIER</stringProp>
            <stringProp name="Argument.value">${__P(rpm.multiplier,1.0)}</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
    </TestPlan>
    <hashTree>
      
      <!-- HTTP Request Defaults -->
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">${BASE_URL}</stringProp>
        <stringProp name="HTTPSampler.protocol"></stringProp>
        <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
      </ConfigTestElement>
      <hashTree/>
      
      <!-- HTTP Header Manager -->
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="Content-Type" elementType="Header">
            <stringProp name="Header.name">Content-Type</stringProp>
            <stringProp name="Header.value">application/json</stringProp>
          </elementProp>
          <elementProp name="Accept" elementType="Header">
            <stringProp name="Header.name">Accept</stringProp>
            <stringProp name="Header.value">application/json</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      
      <!-- CSV Data Set Config for Tenants -->
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Tenant Configuration" enabled="true">
        <stringProp name="filename">data/tenants.csv</stringProp>
        <stringProp name="fileEncoding">UTF-8</stringProp>
        <stringProp name="variableNames">tenant_id,tenant_name,target_rpm,auth_token,ramp_up_seconds</stringProp>
        <boolProp name="ignoreFirstLine">true</boolProp>
        <stringProp name="delimiter">,</stringProp>
        <boolProp name="quotedData">true</boolProp>
        <boolProp name="recycle">true</boolProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
      </CSVDataSet>
      <hashTree/>
      
      <!-- Setup Thread Group for initialization -->
      <SetupThreadGroup guiclass="SetupThreadGroupGui" testclass="SetupThreadGroup" testname="setUp Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </SetupThreadGroup>
      <hashTree>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Set User Directory" enabled="true">
          <stringProp name="scriptLanguage">groovy</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="script">// Set user.dir property for Python scripts
import java.nio.file.Paths
def currentDir = new File(".").getCanonicalPath()
props.put("user.dir", currentDir)
log.info("Set user.dir to: " + currentDir)
SampleResult.setSuccessful(true)</stringProp>
        </JSR223Sampler>
        <hashTree/>
      </hashTree>
      
      <!-- Standard Thread Group -->
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Main Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${__jexl3(Math.round(${target_rpm} * ${RPM_MULTIPLIER} / 60),)}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${ramp_up_seconds}</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">${TEST_DURATION}</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
      </ThreadGroup>
      <hashTree>
        
        <!-- Once Only Controller for initialization -->
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
        <hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Initialize Thread Variables" enabled="true">
            <stringProp name="scriptLanguage">groovy</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">vars.put("START_TIME", System.currentTimeMillis().toString())
log.info("Thread initialized at: " + vars.get("START_TIME"))
SampleResult.setSuccessful(true)</stringProp>
          </JSR223Sampler>
          <hashTree/>
        </hashTree>
        
        <!-- CSV Data Set for Facilities -->
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Facility Data" enabled="true">
          <stringProp name="filename">data/facilities.csv</stringProp>
          <stringProp name="fileEncoding">UTF-8</stringProp>
          <stringProp name="variableNames">facility_tenant_id,facility_id,facility_name,load_weight,carrier_ids</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">true</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.thread</stringProp>
        </CSVDataSet>
        <hashTree/>
        
        <!-- If Controller to filter facilities by tenant -->
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Facility Matches Tenant" enabled="true">
          <stringProp name="IfController.condition">${__groovy(vars.get("facility_tenant_id") == vars.get("tenant_id"))}</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          
          <!-- Random Controller for API Mix -->
          <RandomController guiclass="RandomControlGui" testclass="RandomController" testname="API Mix Controller" enabled="true">
            <intProp name="InterleaveControl.style">1</intProp>
          </RandomController>
          <hashTree>
            
            <!-- Throughput Controller for Yard Availability (15%) -->
            <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Yard Availability (15%)" enabled="true">
              <intProp name="ThroughputController.style">1</intProp>
              <boolProp name="ThroughputController.perThread">false</boolProp>
              <intProp name="ThroughputController.maxThroughput">1</intProp>
              <FloatProperty>
                <name>ThroughputController.percentThroughput</name>
                <value>15.0</value>
                <savedValue>0.0</savedValue>
              </FloatProperty>
            </ThroughputController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Include Yard Availability" enabled="true">
                <stringProp name="IncludeController.includepath">api-fragments/yard-availability.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            
            <!-- Throughput Controller for Trailer Overview (20%) -->
            <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Trailer Overview (20%)" enabled="true">
              <intProp name="ThroughputController.style">1</intProp>
              <boolProp name="ThroughputController.perThread">false</boolProp>
              <intProp name="ThroughputController.maxThroughput">1</intProp>
              <FloatProperty>
                <name>ThroughputController.percentThroughput</name>
                <value>20.0</value>
                <savedValue>0.0</savedValue>
              </FloatProperty>
            </ThroughputController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Include Trailer Overview" enabled="true">
                <stringProp name="IncludeController.includepath">api-fragments/trailer-overview.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            
            <!-- Throughput Controller for Trailer Exceptions (10%) -->
            <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Trailer Exceptions (10%)" enabled="true">
              <intProp name="ThroughputController.style">1</intProp>
              <boolProp name="ThroughputController.perThread">false</boolProp>
              <intProp name="ThroughputController.maxThroughput">1</intProp>
              <FloatProperty>
                <name>ThroughputController.percentThroughput</name>
                <value>10.0</value>
                <savedValue>0.0</savedValue>
              </FloatProperty>
            </ThroughputController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Include Trailer Exceptions" enabled="true">
                <stringProp name="IncludeController.includepath">api-fragments/trailer-exceptions.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            
            <!-- Throughput Controller for Task Workload (10%) -->
            <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Task Workload (10%)" enabled="true">
              <intProp name="ThroughputController.style">1</intProp>
              <boolProp name="ThroughputController.perThread">false</boolProp>
              <intProp name="ThroughputController.maxThroughput">1</intProp>
              <FloatProperty>
                <name>ThroughputController.percentThroughput</name>
                <value>10.0</value>
                <savedValue>0.0</savedValue>
              </FloatProperty>
            </ThroughputController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Include Task Workload" enabled="true">
                <stringProp name="IncludeController.includepath">api-fragments/task-workload.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            
            <!-- Throughput Controller for Task Attention (5%) -->
            <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Task Attention (5%)" enabled="true">
              <intProp name="ThroughputController.style">1</intProp>
              <boolProp name="ThroughputController.perThread">false</boolProp>
              <intProp name="ThroughputController.maxThroughput">1</intProp>
              <FloatProperty>
                <name>ThroughputController.percentThroughput</name>
                <value>5.0</value>
                <savedValue>0.0</savedValue>
              </FloatProperty>
            </ThroughputController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Include Task Attention" enabled="true">
                <stringProp name="IncludeController.includepath">api-fragments/task-attention.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            
            <!-- Throughput Controller for Site Occupancy (15%) -->
            <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Site Occupancy (15%)" enabled="true">
              <intProp name="ThroughputController.style">1</intProp>
              <boolProp name="ThroughputController.perThread">false</boolProp>
              <intProp name="ThroughputController.maxThroughput">1</intProp>
              <FloatProperty>
                <name>ThroughputController.percentThroughput</name>
                <value>15.0</value>
                <savedValue>0.0</savedValue>
              </FloatProperty>
            </ThroughputController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Include Site Occupancy" enabled="true">
                <stringProp name="IncludeController.includepath">api-fragments/site-occupancy.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            
            <!-- Throughput Controller for Shipment Forecast (10%) -->
            <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Shipment Forecast (10%)" enabled="true">
              <intProp name="ThroughputController.style">1</intProp>
              <boolProp name="ThroughputController.perThread">false</boolProp>
              <intProp name="ThroughputController.maxThroughput">1</intProp>
              <FloatProperty>
                <name>ThroughputController.percentThroughput</name>
                <value>10.0</value>
                <savedValue>0.0</savedValue>
              </FloatProperty>
            </ThroughputController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Include Shipment Forecast" enabled="true">
                <stringProp name="IncludeController.includepath">api-fragments/shipment-forecast.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            
            <!-- Throughput Controller for Dwell Time (5%) -->
            <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Dwell Time (5%)" enabled="true">
              <intProp name="ThroughputController.style">1</intProp>
              <boolProp name="ThroughputController.perThread">false</boolProp>
              <intProp name="ThroughputController.maxThroughput">1</intProp>
              <FloatProperty>
                <name>ThroughputController.percentThroughput</name>
                <value>5.0</value>
                <savedValue>0.0</savedValue>
              </FloatProperty>
            </ThroughputController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Include Dwell Time" enabled="true">
                <stringProp name="IncludeController.includepath">api-fragments/dwell-time.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            
            <!-- Throughput Controller for Door Breakdown (5%) -->
            <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Door Breakdown (5%)" enabled="true">
              <intProp name="ThroughputController.style">1</intProp>
              <boolProp name="ThroughputController.perThread">false</boolProp>
              <intProp name="ThroughputController.maxThroughput">1</intProp>
              <FloatProperty>
                <name>ThroughputController.percentThroughput</name>
                <value>5.0</value>
                <savedValue>0.0</savedValue>
              </FloatProperty>
            </ThroughputController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Include Door Breakdown" enabled="true">
                <stringProp name="IncludeController.includepath">api-fragments/door-breakdown.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            
            <!-- Throughput Controller for Detention Summary (5%) -->
            <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Detention Summary (5%)" enabled="true">
              <intProp name="ThroughputController.style">1</intProp>
              <boolProp name="ThroughputController.perThread">false</boolProp>
              <intProp name="ThroughputController.maxThroughput">1</intProp>
              <FloatProperty>
                <name>ThroughputController.percentThroughput</name>
                <value>5.0</value>
                <savedValue>0.0</savedValue>
              </FloatProperty>
            </ThroughputController>
            <hashTree>
              <IncludeController guiclass="IncludeControllerGui" testclass="IncludeController" testname="Include Detention Summary" enabled="true">
                <stringProp name="IncludeController.includepath">api-fragments/detention-summary.jmx</stringProp>
              </IncludeController>
              <hashTree/>
            </hashTree>
            
          </hashTree>
          
          <!-- Constant Throughput Timer -->
          <ConstantThroughputTimer guiclass="TestBeanGUI" testclass="ConstantThroughputTimer" testname="Constant Throughput Timer" enabled="true">
            <doubleProp>
              <name>throughput</name>
              <value>${__jexl3(${target_rpm} * ${RPM_MULTIPLIER})}</value>
              <savedValue>0.0</savedValue>
            </doubleProp>
            <intProp name="calcMode">2</intProp>
          </ConstantThroughputTimer>
          <hashTree/>
          
        </hashTree>
      </hashTree>
      
      <!-- View Results Tree (disabled for performance) -->
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      
      <!-- Summary Report -->
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">results/summary_${__time(yyyyMMdd_HHmmss)}.jtl</stringProp>
      </ResultCollector>
      <hashTree/>
      
    </hashTree>
  </hashTree>
</jmeterTestPlan>